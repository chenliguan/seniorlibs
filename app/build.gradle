apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.dependence.testRunner
    }

    signingConfigs {
        seniorlibsConfig {
            storeFile file("../keystore/seniorlibs.jks")
            storePassword "seniorlibs"
            keyAlias "seniorlibs_key"
            keyPassword "seniorlibs"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false   // 是否打开混淆
            signingConfig signingConfigs.seniorlibsConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false  // 移除无用的resource文件
            zipAlignEnabled true   // Zipalign优化
        }
        release {
            minifyEnabled true    // 是否打开混淆
            signingConfig signingConfigs.seniorlibsConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true  // 移除无用的resource文件
            zipAlignEnabled true  // Zipalign优化

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "seniorlibs_${variant.versionName}_${variant.versionCode}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
    }

    flavorDimensions "xstDimension"
    productFlavors {
        debugFlavor {
            dimension "xstDimension"
            manifestPlaceholders = [
                    APP_CHANNEL_VALUE: "napp_1000",    // APP渠道号
            ]
        }

        releaseFlavor {
            dimension "xstDimension"
            manifestPlaceholders = [
                    APP_CHANNEL_VALUE: "napp_2000",    // APP渠道号
            ]
        }
    }

    dexOptions {
        //incremental true
        javaMaxHeapSize "4g"
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility = rootProject.ext.java.javaVersion
        targetCompatibility = rootProject.ext.java.javaVersion
    }

    repositories{flatDir{dirs 'libs'}}
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':baselib')
}

def static releaseTime() {
    return new Date().format("MMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}

// 测试gradles和systrace库：com.seniorlibs.buildsrc为resources/META-INF/gradle-plugins下的properties文件名称
//apply plugin: 'com.seniorlibs.buildsrc'

//apply plugin: 'com.seniorlibs.systrace-plugin'
//systrace {
//    enable = true
//    baseMethodMapFile = "${project.buildDir}/systrace_output/Debug.methodmap"
//    blackListFile = "${project.projectDir}/blacklist/blackMethodList.txt"
//}

// 文件拷贝
copy {
    from file("build/outputs/apk/")
    into getRootProject().getBuildDir().path + "/apk/"
}